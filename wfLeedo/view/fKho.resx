<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="reloadBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="searchBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        P2dmC+wg8Jk/AAAAAElFTkSuQmCC
</value>
  </data>
</root>